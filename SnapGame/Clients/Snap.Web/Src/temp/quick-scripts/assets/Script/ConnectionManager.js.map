{"version":3,"sources":["ConnectionManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import * as signalR from \"@aspnet/signalr\";\r\nimport { IServerConfiguration, ISecurityConfiguration } from \"./oauth/IGameConfiguration\";\r\n\r\nexport class ConnectionManager {\r\n    private static readonly conn: ConnectionManager = new ConnectionManager();\r\n    public static getInstance(): ConnectionManager {\r\n        return ConnectionManager.conn;\r\n    }\r\n\r\n    public static readonly ON_CONNECTING: string = \"onConnecting\";\r\n    public static readonly ON_CONNECTION_CLOSED: string = \"onConnectionClosed\";\r\n    public static readonly ON_CONNECTED: string = \"onConnected\";\r\n\r\n    public static readonly CREATE_ROOM: string = \"CreateRoom\";\r\n    public static readonly JOIN_GAME_MESSAGE: string = \"JoinGame\";\r\n    public static readonly START_GAME_MESSAGE: string = \"StartGame\";\r\n    public static readonly POP_CARD_MESSAGE: string = \"PopCard\";\r\n    public static readonly SNAP_MESSAGE: string = \"Snap\";\r\n\r\n    public static readonly ON_CREATE_ROOM: string = \"OnCreateRoom\";\r\n    public static readonly ON_POP_CARD_MESSAGE: string = \"OnJoinGame\";\r\n    public static readonly ON_START_GAME_MESSAGE: string = \"OnStartGame\";\r\n    public static readonly ON_JOIN_GAME_MESSAGE: string = \"OnPopCard\";\r\n    public static readonly ON_SNAP_MESSAGE: string = \"OnPopCard\";\r\n\r\n    private connection: signalR.HubConnection;\r\n    private connectTryCount: number = 0;\r\n\r\n    constructor(private serverConfig?: IServerConfiguration,\r\n        private securityConfig?: ISecurityConfiguration) { }\r\n\r\n    async connect(): Promise<void> {\r\n        if (!this.connection) {\r\n            const builder: signalR.HubConnectionBuilder = new signalR.HubConnectionBuilder()\r\n                .configureLogging(signalR.LogLevel.Information)\r\n                .withUrl(this.serverConfig.gameServerUrl, {\r\n                    accessTokenFactory: () => {\r\n                        return this.securityConfig.currentToken.access_token;\r\n                    }\r\n                });\r\n            this.connection = builder.build();\r\n            this.connection.onclose((err) => {\r\n                this.dispatch(ConnectionManager.ON_CONNECTION_CLOSED, err);\r\n            });\r\n            this.connection\r\n                .on(ConnectionManager.CREATE_ROOM, (message) => {\r\n                    cc.log(`${ConnectionManager.CREATE_ROOM} received: ${message}`);\r\n                    this.dispatch(ConnectionManager.ON_CREATE_ROOM, message);\r\n                });\r\n            this.connection\r\n                .on(ConnectionManager.JOIN_GAME_MESSAGE, (message) => {\r\n                    cc.log(`${ConnectionManager.JOIN_GAME_MESSAGE} received: ${message}`);\r\n                    this.dispatch(ConnectionManager.ON_JOIN_GAME_MESSAGE, message);\r\n                });\r\n            this.connection\r\n                .on(ConnectionManager.START_GAME_MESSAGE, (message) => {\r\n                    cc.log(`${ConnectionManager.START_GAME_MESSAGE} received: ${message}`);\r\n                    this.dispatch(ConnectionManager.ON_START_GAME_MESSAGE, message);\r\n                });\r\n            this.connection\r\n                .on(ConnectionManager.POP_CARD_MESSAGE, (message) => {\r\n                    cc.log(`${ConnectionManager.POP_CARD_MESSAGE} received: ${message}`);\r\n                    this.dispatch(ConnectionManager.ON_POP_CARD_MESSAGE, message);\r\n                });\r\n            this.connection\r\n                .on(ConnectionManager.SNAP_MESSAGE, (message) => {\r\n                    cc.log(`${ConnectionManager.SNAP_MESSAGE} received: ${message}`);\r\n                    this.dispatch(ConnectionManager.ON_SNAP_MESSAGE, message);\r\n                });\r\n        }\r\n        if (this.connection.state === signalR.HubConnectionState.Connected) {\r\n            return new Promise<void>(() => {\r\n                cc.log(\"You are already connected\");\r\n                return;\r\n            });\r\n        }\r\n\r\n        cc.log(\"Connecting\");\r\n        this.dispatch(ConnectionManager.ON_CONNECTING, {});\r\n        this.connectTryCount++;\r\n        if (this.connectTryCount > 10) {\r\n            throw \"maxReconnectFailed\";\r\n        }\r\n        await this.connection.start();\r\n        this.connectTryCount = 0;\r\n        this.dispatch(ConnectionManager.ON_CONNECTED, {});\r\n        cc.log(\"Connection stablished!\");\r\n\r\n    }\r\n\r\n    createRoom(): Promise<void> {\r\n        this.validateConnected();\r\n        return this.connection.send(ConnectionManager.CREATE_ROOM).then((data) => {\r\n            cc.log(data);\r\n        }).catch(e => {\r\n            cc.error(e);\r\n            throw e;\r\n        });\r\n    }\r\n\r\n    startGame(roomId: number): any {\r\n        this.validateConnected();\r\n        return this.connection.send(ConnectionManager.START_GAME_MESSAGE, roomId).then((data) => {\r\n            cc.log(`Message ${ConnectionManager.START_GAME_MESSAGE} sent`);\r\n        }).catch(err => {\r\n            cc.error(err);\r\n            throw err;\r\n        });\r\n    }\r\n    joinGame(roomId: number, isViewer: boolean = false): Promise<any> {\r\n        this.validateConnected();\r\n        return this.connection.send(ConnectionManager.JOIN_GAME_MESSAGE, roomId, isViewer)\r\n            .then((data) => {\r\n                cc.log(`Message ${ConnectionManager.JOIN_GAME_MESSAGE} sent`);\r\n            }).catch(err => {\r\n                cc.error(err);\r\n                throw err;\r\n            });\r\n    }\r\n    popCard(gameId: number): Promise<any> {\r\n        this.validateConnected();\r\n        return this.connection.send(ConnectionManager.POP_CARD_MESSAGE, gameId).then((data) => {\r\n            cc.log(`Message ${ConnectionManager.POP_CARD_MESSAGE} sent`);\r\n        }).catch(err => {\r\n            cc.error(err);\r\n            throw err;\r\n        });\r\n    }\r\n    snap(gameId: number): Promise<any> {\r\n        this.validateConnected();\r\n        return this.connection.send(ConnectionManager.SNAP_MESSAGE, gameId).then((data) => {\r\n            cc.log(`Message ${ConnectionManager.POP_CARD_MESSAGE} sent`);\r\n        }).catch(err => {\r\n            cc.error(err);\r\n            throw err;\r\n        });\r\n    }\r\n    private validateConnected(): void {\r\n        if (this.connection.state === signalR.HubConnectionState.Disconnected) {\r\n            cc.error(\"You should be connected to create a room\");\r\n            throw \"You are discconected\";\r\n        }\r\n        return;\r\n    }\r\n\r\n    private dispatch(type: string, data: any): void {\r\n        const e: cc.Event.EventCustom = new cc.Event.EventCustom(type, true);\r\n        e.target = this;\r\n        e.setUserData(data);\r\n        cc.director.dispatchEvent(e);\r\n        cc.systemEvent.dispatchEvent(e);\r\n    }\r\n}\r\n\r\nexport default ConnectionManager;"]}