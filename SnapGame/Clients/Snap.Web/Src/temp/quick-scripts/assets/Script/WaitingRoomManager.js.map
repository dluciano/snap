{"version":3,"sources":["WaitingRoomManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["\"use strict\";\r\nimport ConnectionManager from \"./ConnectionManager\";\r\nimport \"./ConnectionManager\";\r\nimport SnapGame from \"./SnapGame\";\r\nimport MainGameManager from \"./MainGameManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WaitingRoomManager extends cc.Component {\r\n    @property(cc.Prefab)\r\n    userPrefab: cc.Prefab = null;\r\n\r\n    @property()\r\n    menuScene: string = \"\";\r\n    @property()\r\n    mainGameScene: string = \"\";\r\n\r\n    @property(cc.Label)\r\n    titleLabel: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    snapGameNode: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    playersPanelNode: cc.Node = null;\r\n\r\n    private game: SnapGame = null;\r\n    private readonly connection: ConnectionManager = ConnectionManager.getInstance();\r\n\r\n    onLoad(): void {\r\n        cc.systemEvent\r\n            .on(ConnectionManager.ON_START_GAME_MESSAGE, this.gameStarted, this);\r\n        this.game = this.snapGameNode.getComponent(SnapGame);\r\n        cc.systemEvent\r\n            .on(ConnectionManager.ON_JOIN_GAME_MESSAGE, this.onJoinGame, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        cc.systemEvent\r\n            .off(ConnectionManager.ON_START_GAME_MESSAGE, this.gameStarted, this);\r\n        cc.systemEvent\r\n            .off(ConnectionManager.ON_JOIN_GAME_MESSAGE, this.onJoinGame, this);\r\n    }\r\n\r\n    loadData(): void {\r\n        this.titleLabel.string = \"Room #\" + this.game.roomId.toString();\r\n        fetch(`https://localhost:44378/api/GameRoom/${this.game.roomId}`)\r\n            .then(data => {\r\n                return data.json();\r\n            }).then(room => {\r\n                room.roomPlayers.map(rp => rp.player).forEach(player => {\r\n                    this.addPlayerItem(player.username);\r\n                });\r\n            });\r\n    }\r\n\r\n    private onJoinGame(e: cc.Event.EventCustom): void {\r\n        const joinedUser: string = e.getUserData().username;\r\n        this.addPlayerItem(joinedUser);\r\n    }\r\n\r\n    startGame(): void {\r\n        ConnectionManager.getInstance().startGame(this.game.roomId);\r\n    }\r\n\r\n    private gameStarted(e: cc.Event.EventCustom): void {\r\n        const data: any = e.getUserData();\r\n        const gameId: number = data.gameId;\r\n        const currentPlayer: string = data.currentPlayer;\r\n        cc.director.loadScene(this.mainGameScene, () => {\r\n            const scene: cc.Scene = cc.director.getScene();\r\n            const gameManager: MainGameManager = scene\r\n                .getChildByName(\"MainGameManager\")\r\n                .getComponent(MainGameManager);\r\n            const game: SnapGame = scene\r\n                .getChildByName(\"Game\")\r\n                .getComponent(SnapGame);\r\n            game.gameId = gameId;\r\n            game.currentPlayer = currentPlayer;\r\n            game.playerData = data.playerData;\r\n            gameManager.loadData();\r\n        });\r\n    }\r\n\r\n    private addPlayerItem(username: string): void {\r\n        cc.log(\"User: \" + username + \" joined the match\");\r\n        const node: cc.Node = cc.instantiate(this.userPrefab);\r\n        const lbl: cc.Label = node.getChildByName(\"Label\").getComponent(cc.Label);\r\n        lbl.string = username.toString();\r\n        this.playersPanelNode.addChild(node);\r\n    }\r\n\r\n    back(): void {\r\n        cc.director.loadScene(this.menuScene);\r\n    }\r\n\r\n    deleteRoom(): void {\r\n        throw \"Not yet implemented\";\r\n    }\r\n}\r\n"]}