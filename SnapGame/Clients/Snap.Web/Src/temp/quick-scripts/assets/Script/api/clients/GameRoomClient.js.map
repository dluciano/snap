{"version":3,"sources":["GameRoomClient.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\api\\clients","sourcesContent":["import { GameRoom } from \"../models/GameRoom\";\r\nimport { throwException } from \"./SwaggerException\";\r\n\r\nexport class GameRoomClient {\r\n    private http: {\r\n        fetch(url: RequestInfo, init?: RequestInit): Promise<Response>;\r\n    };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n    constructor(baseUrl?: string, http?: {\r\n        fetch(url: RequestInfo, init?: RequestInit): Promise<Response>;\r\n    }) {\r\n        this.http = http ? http : <any>window;\r\n        this.baseUrl = baseUrl ? baseUrl : \"https://localhost:44378\";\r\n    }\r\n    getAll(): Promise<GameRoom[] | null> {\r\n        const url_: string = (this.baseUrl + \"/api/GameRoom\").replace(/[?&]$/, \"\");\r\n        const options_: RequestInit = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGetAll(_response);\r\n        });\r\n    }\r\n    protected processGetAll(response: Response): Promise<GameRoom[] | null> {\r\n        const status: number = response.status;\r\n        let _headers: any = {};\r\n        if (response.headers && response.headers.forEach) {\r\n            response.headers.forEach((v: any, k: any) => _headers[k] = v);\r\n        }\r\n\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n                let result200: any = null;\r\n                const resultData200: any = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                if (resultData200 && resultData200.constructor === Array) {\r\n                    result200 = [] as any;\r\n                    for (let item of resultData200) {\r\n                        result200!.push(GameRoom.fromJS(item));\r\n                    }\r\n                }\r\n                return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n                return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<GameRoom[] | null>(<any>null);\r\n    }\r\n\r\n    get(id: number): Promise<GameRoom | null> {\r\n        let url_: string = this.baseUrl + \"/api/GameRoom/{id}\";\r\n        if (id === undefined || id === null) {\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        }\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n        const options_: RequestInit = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGet(_response);\r\n        });\r\n    }\r\n    protected processGet(response: Response): Promise<GameRoom | null> {\r\n        const status: number = response.status;\r\n        let _headers: any = {};\r\n        if (response.headers && response.headers.forEach) {\r\n            response.headers.forEach((v: any, k: any) => _headers[k] = v);\r\n        }\r\n\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n                let result200: any = null;\r\n                const resultData200: any = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                result200 = resultData200 ? GameRoom.fromJS(resultData200) : <any>null;\r\n                return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n                return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<GameRoom | null>(<any>null);\r\n    }\r\n}\r\n"]}