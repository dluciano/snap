// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Snap.DataAccess;

namespace Snap.DataAccess.Migrations
{
    [DbContext(typeof(SnapDbContext))]
    partial class SnapDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Snap.Entities.CardPileNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Card");

                    b.Property<int?>("PreviousId");

                    b.HasKey("Id");

                    b.HasIndex("PreviousId");

                    b.ToTable("CardPileNodes");
                });

            modelBuilder.Entity("Snap.Entities.GameRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CentralPileLastId");

                    b.Property<int?>("CurrentTurnId");

                    b.Property<int?>("FirstPlayerId");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("CentralPileLastId");

                    b.HasIndex("CurrentTurnId");

                    b.HasIndex("FirstPlayerId");

                    b.ToTable("GameRooms");
                });

            modelBuilder.Entity("Snap.Entities.GameRoomPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GameRoomId");

                    b.Property<bool>("IsViewer");

                    b.Property<int?>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId");

                    b.HasIndex("PlayerId");

                    b.ToTable("GameRoomPlayers");
                });

            modelBuilder.Entity("Snap.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Snap.Entities.PlayerGameplay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Card");

                    b.Property<int?>("PlayerTurnId");

                    b.HasKey("Id");

                    b.HasIndex("PlayerTurnId");

                    b.ToTable("PlayerGamePlays");
                });

            modelBuilder.Entity("Snap.Entities.PlayerTurn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GameRoomId");

                    b.Property<int?>("LastId");

                    b.Property<int?>("NextId");

                    b.Property<int?>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId");

                    b.HasIndex("LastId");

                    b.HasIndex("NextId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerTurns");
                });

            modelBuilder.Entity("Snap.Entities.CardPileNode", b =>
                {
                    b.HasOne("Snap.Entities.CardPileNode", "Previous")
                        .WithMany()
                        .HasForeignKey("PreviousId");
                });

            modelBuilder.Entity("Snap.Entities.GameRoom", b =>
                {
                    b.HasOne("Snap.Entities.CardPileNode", "CentralPileLast")
                        .WithMany("CentralPiles")
                        .HasForeignKey("CentralPileLastId");

                    b.HasOne("Snap.Entities.PlayerTurn", "CurrentTurn")
                        .WithMany("CurrentTurns")
                        .HasForeignKey("CurrentTurnId");

                    b.HasOne("Snap.Entities.PlayerTurn", "FirstPlayer")
                        .WithMany("FirstPlayers")
                        .HasForeignKey("FirstPlayerId");
                });

            modelBuilder.Entity("Snap.Entities.GameRoomPlayer", b =>
                {
                    b.HasOne("Snap.Entities.GameRoom", "GameRoom")
                        .WithMany("RoomPlayers")
                        .HasForeignKey("GameRoomId");

                    b.HasOne("Snap.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("Snap.Entities.PlayerGameplay", b =>
                {
                    b.HasOne("Snap.Entities.PlayerTurn", "PlayerTurn")
                        .WithMany("PlayerGameplay")
                        .HasForeignKey("PlayerTurnId");
                });

            modelBuilder.Entity("Snap.Entities.PlayerTurn", b =>
                {
                    b.HasOne("Snap.Entities.GameRoom", "GameRoom")
                        .WithMany("Turns")
                        .HasForeignKey("GameRoomId");

                    b.HasOne("Snap.Entities.CardPileNode", "Last")
                        .WithMany()
                        .HasForeignKey("LastId");

                    b.HasOne("Snap.Entities.PlayerTurn", "Next")
                        .WithMany()
                        .HasForeignKey("NextId");

                    b.HasOne("Snap.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");
                });
#pragma warning restore 612, 618
        }
    }
}
